diff --git a/device-usage/conduit_server/config.ml b/device-usage/conduit_server/config.ml
index 99d347b..1a7c914 100644
--- a/device-usage/conduit_server/config.ml
+++ b/device-usage/conduit_server/config.ml
@@ -1,10 +1,10 @@
 open Mirage
 
 let handler =
-  let packages = [package "cohttp-mirage"] in
+  let packages = [package ~sublibs:[ "tcp" ] "conduit-mirage"; package "cohttp-mirage"] in
   foreign
     ~packages
-    "Unikernel.Main" (conduit @-> job)
+    "Unikernel.Main" (stackv4 @-> job)
 
 let () =
-  register "conduit_server" [ handler $ conduit_direct (generic_stackv4 default_network) ]
+  register "conduit_server" [ handler $ (generic_stackv4 default_network) ]
diff --git a/device-usage/conduit_server/unikernel.ml b/device-usage/conduit_server/unikernel.ml
index 703aaa1..454577d 100644
--- a/device-usage/conduit_server/unikernel.ml
+++ b/device-usage/conduit_server/unikernel.ml
@@ -1,16 +1,26 @@
-module Main (CON:Conduit_mirage.S) = struct
+open Lwt.Infix
+
+module Main (StackV4 : Mirage_types_lwt.STACKV4) = struct
   let src = Logs.Src.create "conduit_server" ~doc:"Conduit HTTP server"
   module Log = (val Logs.src_log src: Logs.LOG)
 
-  module H = Cohttp_mirage.Server(Conduit_mirage.Flow)
+  module Conduit = Conduit_mirage_tcp.Make(StackV4)
 
-  let start conduit =
+  let start stack =
     let http_callback _conn_id req _body =
       let path = Uri.path (Cohttp.Request.uri req) in
       Log.debug (fun f -> f "Got request for %s\n" path);
-      H.respond_string ~status:`OK ~body:"hello mirage world!\n" ()
+      Server_with_conduit.respond_string ~status:`OK ~body:"hello mirage world!\n" ()
     in
 
-    let spec = H.make ~callback:http_callback () in
-    CON.listen conduit (`TCP 80) (H.listen spec)
+    let spec = Server_with_conduit.make ~callback:http_callback () in
+    Server_with_conduit.connect
+      Conduit.configuration
+      Conduit.service >>= fun service ->
+    let cfg =
+      { Conduit_mirage_tcp.stack
+      ; Conduit_mirage_tcp.keepalive= None
+      ; Conduit_mirage_tcp.nodelay= false
+      ; Conduit_mirage_tcp.port= 80 } in
+    service cfg spec
 end
